package com.mrcrayfish.furniture.refurbished.core;

import com.mrcrayfish.framework.api.registry.RegistryContainer;
import com.mrcrayfish.framework.api.registry.RegistryEntry;
import com.mrcrayfish.furniture.refurbished.block.*;
import com.mrcrayfish.furniture.refurbished.item.MailboxItem;
import com.mrcrayfish.furniture.refurbished.item.PoweredItem;
import com.mrcrayfish.furniture.refurbished.platform.Services;
import com.mrcrayfish.furniture.refurbished.util.Utils;
import net.minecraft.world.item.DyeColor;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.SoundType;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.block.state.properties.NoteBlockInstrument;
import net.minecraft.world.level.block.state.properties.WoodType;
import net.minecraft.world.level.material.MapColor;

/**
 * Author: MrCrayfish
 */
@RegistryContainer
public class ModBlocks
{
    public static final RegistryEntry<WorkbenchBlock> WORKBENCH = RegistryEntry.blockWithItem(Utils.resource("workbench"), () -> new WorkbenchBlock(BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<ChairBlock> CHAIR_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_chair"), () -> new ChairBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_chair"), () -> new ChairBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_chair"), () -> new ChairBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_chair"), () -> new ChairBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_chair"), () -> new ChairBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_chair"), () -> new ChairBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_chair"), () -> new ChairBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_chair"), () -> new ChairBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_chair"), () -> new ChairBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ChairBlock> CHAIR_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_chair"), () -> new ChairBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<TableBlock> TABLE_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_table"), () -> new TableBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_table"), () -> new TableBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_table"), () -> new TableBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_table"), () -> new TableBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_table"), () -> new TableBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_table"), () -> new TableBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_table"), () -> new TableBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_table"), () -> new TableBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_table"), () -> new TableBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<TableBlock> TABLE_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_table"), () -> new TableBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_desk"), () -> new DeskBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_desk"), () -> new DeskBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_desk"), () -> new DeskBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_desk"), () -> new DeskBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_desk"), () -> new DeskBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_desk"), () -> new DeskBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_desk"), () -> new DeskBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_desk"), () -> new DeskBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_desk"), () -> new DeskBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DeskBlock> DESK_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_desk"), () -> new DeskBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_drawer"), () -> new DrawerBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_drawer"), () -> new DrawerBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_drawer"), () -> new DrawerBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_drawer"), () -> new DrawerBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_drawer"), () -> new DrawerBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_drawer"), () -> new DrawerBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_drawer"), () -> new DrawerBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_drawer"), () -> new DrawerBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_drawer"), () -> new DrawerBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<DrawerBlock> DRAWER_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_drawer"), () -> new DrawerBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenCabinetryBlock> KITCHEN_CABINETRY_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_kitchen_cabinetry"), () -> new WoodenKitchenCabinetryBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenDrawerBlock> KITCHEN_DRAWER_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_kitchen_drawer"), () -> new WoodenKitchenDrawerBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenSinkBlock> KITCHEN_SINK_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_kitchen_sink"), () -> new WoodenKitchenSinkBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_kitchen_storage_cabinet"), () -> new WoodenKitchenStorageCabinetBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_RED = RegistryEntry.blockWithItem(Utils.resource("red_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenCabinetryBlock> KITCHEN_CABINETRY_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_kitchen_cabinetry"), () -> new ColouredKitchenCabinetryBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_RED = RegistryEntry.blockWithItem(Utils.resource("red_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenDrawerBlock> KITCHEN_DRAWER_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_kitchen_drawer"), () -> new ColouredKitchenDrawerBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_RED = RegistryEntry.blockWithItem(Utils.resource("red_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenSinkBlock> KITCHEN_SINK_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_kitchen_sink"), () -> new ColouredKitchenSinkBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_RED = RegistryEntry.blockWithItem(Utils.resource("red_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<ColouredKitchenStorageCabinetBlock> KITCHEN_STORAGE_CABINET_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_kitchen_storage_cabinet"), () -> new ColouredKitchenStorageCabinetBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<FridgeBlock> FRIDGE_LIGHT = RegistryEntry.block(Utils.resource("light_fridge"), () -> new FridgeBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.5F).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryEntry<FridgeBlock> FRIDGE_DARK = RegistryEntry.block(Utils.resource("dark_fridge"), () -> new FridgeBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.5F).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryEntry<FreezerBlock> FREEZER_LIGHT = RegistryEntry.block(Utils.resource("light_freezer"), () -> new FreezerBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.5F).sound(SoundType.METAL).requiresCorrectToolForDrops(), ModBlocks.FRIDGE_LIGHT::get));
    public static final RegistryEntry<FreezerBlock> FREEZER_DARK = RegistryEntry.block(Utils.resource("dark_freezer"), () -> new FreezerBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.5F).sound(SoundType.METAL).requiresCorrectToolForDrops(), ModBlocks.FRIDGE_DARK::get));
    public static final RegistryEntry<ToasterBlock> TOASTER_LIGHT = RegistryEntry.blockWithItem(Utils.resource("light_toaster"), () -> new ToasterBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<ToasterBlock> TOASTER_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_toaster"), () -> new ToasterBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<MicrowaveBlock> MICROWAVE_LIGHT = RegistryEntry.blockWithItem(Utils.resource("light_microwave"), () -> new MicrowaveBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.0F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<MicrowaveBlock> MICROWAVE_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_microwave"), () -> new MicrowaveBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.0F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<StoveBlock> STOVE_LIGHT = RegistryEntry.blockWithItem(Utils.resource("light_stove"), () -> new StoveBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.5F).sound(SoundType.METAL).requiresCorrectToolForDrops()), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<StoveBlock> STOVE_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_stove"), () -> new StoveBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.5F).sound(SoundType.METAL).requiresCorrectToolForDrops()), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<RangeHoodBlock> RANGE_HOOD_LIGHT = RegistryEntry.blockWithItem(Utils.resource("light_range_hood"), () -> new RangeHoodBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.LANTERN).lightLevel(RangeHoodBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<RangeHoodBlock> RANGE_HOOD_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_range_hood"), () -> new RangeHoodBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.LANTERN).lightLevel(RangeHoodBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<FryingPanBlock> FRYING_PAN = RegistryEntry.blockWithItem(Utils.resource("frying_pan"), () -> new FryingPanBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(ModSounds.SOUND_TYPE_FRYING_PAN.get())));
    public static final RegistryEntry<RecycleBinBlock> RECYCLE_BIN = RegistryEntry.blockWithItem(Utils.resource("recycle_bin"), () -> new RecycleBinBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_cutting_board"), () -> new CuttingBoardBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_cutting_board"), () -> new CuttingBoardBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_cutting_board"), () -> new CuttingBoardBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_cutting_board"), () -> new CuttingBoardBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_cutting_board"), () -> new CuttingBoardBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_cutting_board"), () -> new CuttingBoardBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_cutting_board"), () -> new CuttingBoardBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_cutting_board"), () -> new CuttingBoardBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_cutting_board"), () -> new CuttingBoardBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CuttingBoardBlock> CUTTING_BOARD_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_cutting_board"), () -> new CuttingBoardBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<PlateBlock> PLATE = RegistryEntry.blockWithItem(Utils.resource("plate"), () -> new PlateBlock(BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(1.0F).sound(SoundType.DECORATED_POT)));
    public static final RegistryEntry<CrateBlock> CRATE_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_crate"), () -> new CrateBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_crate"), () -> new CrateBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_crate"), () -> new CrateBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_crate"), () -> new CrateBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_crate"), () -> new CrateBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_crate"), () -> new CrateBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_crate"), () -> new CrateBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_crate"), () -> new CrateBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_crate"), () -> new CrateBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<CrateBlock> CRATE_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_crate"), () -> new CrateBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<GrillBlock> GRILL_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_grill"), () -> new GrillBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_grill"), () -> new GrillBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_grill"), () -> new GrillBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_grill"), () -> new GrillBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_grill"), () -> new GrillBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_grill"), () -> new GrillBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_grill"), () -> new GrillBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_grill"), () -> new GrillBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_grill"), () -> new GrillBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_grill"), () -> new GrillBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_grill"), () -> new GrillBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_grill"), () -> new GrillBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_grill"), () -> new GrillBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_grill"), () -> new GrillBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_RED = RegistryEntry.blockWithItem(Utils.resource("red_grill"), () -> new GrillBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<GrillBlock> GRILL_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_grill"), () -> new GrillBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.5F).sound(SoundType.LANTERN).requiresCorrectToolForDrops()));
    public static final RegistryEntry<CoolerBlock> COOLER_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_cooler"), () -> new CoolerBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_cooler"), () -> new CoolerBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_cooler"), () -> new CoolerBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_cooler"), () -> new CoolerBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_cooler"), () -> new CoolerBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_cooler"), () -> new CoolerBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_cooler"), () -> new CoolerBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_cooler"), () -> new CoolerBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_cooler"), () -> new CoolerBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_cooler"), () -> new CoolerBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_cooler"), () -> new CoolerBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_cooler"), () -> new CoolerBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_cooler"), () -> new CoolerBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_cooler"), () -> new CoolerBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_RED = RegistryEntry.blockWithItem(Utils.resource("red_cooler"), () -> new CoolerBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<CoolerBlock> COOLER_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_cooler"), () -> new CoolerBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_mail_box"), () -> new MailboxBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_mail_box"), () -> new MailboxBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_mail_box"), () -> new MailboxBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_mail_box"), () -> new MailboxBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_mail_box"), () -> new MailboxBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_mail_box"), () -> new MailboxBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_mail_box"), () -> new MailboxBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_mail_box"), () -> new MailboxBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_mail_box"), () -> new MailboxBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<MailboxBlock> MAIL_BOX_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_mail_box"), () -> new MailboxBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD)), block -> new MailboxItem(block, new Item.Properties()));
    public static final RegistryEntry<PostBoxBlock> POST_BOX = RegistryEntry.blockWithItem(Utils.resource("post_box"), () -> new PostBoxBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(3.5F).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_RED = RegistryEntry.blockWithItem(Utils.resource("red_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<TrampolineBlock> TRAMPOLINE_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_trampoline"), () -> Services.BLOCK.createTrampolineBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(2.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<HedgeBlock> HEDGE_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_hedge"), () -> new HedgeBlock(LeafType.OAK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.5F).sound(SoundType.AZALEA_LEAVES))); //TODO fix sound types
    public static final RegistryEntry<HedgeBlock> HEDGE_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_hedge"), () -> new HedgeBlock(LeafType.SPRUCE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<HedgeBlock> HEDGE_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_hedge"), () -> new HedgeBlock(LeafType.BIRCH, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<HedgeBlock> HEDGE_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_hedge"), () -> new HedgeBlock(LeafType.JUNGLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<HedgeBlock> HEDGE_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_hedge"), () -> new HedgeBlock(LeafType.ACACIA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<HedgeBlock> HEDGE_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_hedge"), () -> new HedgeBlock(LeafType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<HedgeBlock> HEDGE_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_hedge"), () -> new HedgeBlock(LeafType.MANGROVE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<HedgeBlock> HEDGE_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_hedge"), () -> new HedgeBlock(LeafType.CHERRY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<HedgeBlock> HEDGE_AZALEA = RegistryEntry.blockWithItem(Utils.resource("azalea_hedge"), () -> new HedgeBlock(LeafType.AZALEA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(0.25F).sound(SoundType.AZALEA_LEAVES)));
    public static final RegistryEntry<SteppingStoneBlock> STEPPING_STONES_STONE = RegistryEntry.blockWithItem(Utils.resource("stone_stepping_stones"), () -> new SteppingStoneBlock(StoneType.STONE, BlockBehaviour.Properties.of().mapColor(MapColor.STONE).strength(1.5F).sound(SoundType.STONE).noOcclusion()));
    public static final RegistryEntry<SteppingStoneBlock> STEPPING_STONES_GRANITE = RegistryEntry.blockWithItem(Utils.resource("granite_stepping_stones"), () -> new SteppingStoneBlock(StoneType.GRANITE, BlockBehaviour.Properties.of().mapColor(MapColor.STONE).strength(1.5F).sound(SoundType.STONE).noOcclusion()));
    public static final RegistryEntry<SteppingStoneBlock> STEPPING_STONES_DIORITE = RegistryEntry.blockWithItem(Utils.resource("diorite_stepping_stones"), () -> new SteppingStoneBlock(StoneType.DIORITE, BlockBehaviour.Properties.of().mapColor(MapColor.STONE).strength(1.5F).sound(SoundType.STONE).noOcclusion()));
    public static final RegistryEntry<SteppingStoneBlock> STEPPING_STONES_ANDESITE = RegistryEntry.blockWithItem(Utils.resource("andesite_stepping_stones"), () -> new SteppingStoneBlock(StoneType.ANDESITE, BlockBehaviour.Properties.of().mapColor(MapColor.STONE).strength(1.5F).sound(SoundType.STONE).noOcclusion()));
    public static final RegistryEntry<SteppingStoneBlock> STEPPING_STONES_DEEPSLATE = RegistryEntry.blockWithItem(Utils.resource("deepslate_stepping_stones"), () -> new SteppingStoneBlock(StoneType.DEEPSLATE, BlockBehaviour.Properties.of().mapColor(MapColor.STONE).strength(1.5F).sound(SoundType.STONE).noOcclusion()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_lattice_fence"), () -> new LatticeFenceBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_lattice_fence"), () -> new LatticeFenceBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_lattice_fence"), () -> new LatticeFenceBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_lattice_fence"), () -> new LatticeFenceBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_lattice_fence"), () -> new LatticeFenceBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_lattice_fence"), () -> new LatticeFenceBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_lattice_fence"), () -> new LatticeFenceBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_lattice_fence"), () -> new LatticeFenceBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_lattice_fence"), () -> new LatticeFenceBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceBlock> LATTICE_FENCE_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_lattice_fence"), () -> new LatticeFenceBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<LatticeFenceGateBlock> LATTICE_FENCE_GATE_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_lattice_fence_gate"), () -> new LatticeFenceGateBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.0F).sound(SoundType.WOOD).ignitedByLava()));
    public static final RegistryEntry<DoorMatBlock> DOOR_MAT = RegistryEntry.blockWithItem(Utils.resource("door_mat"), () -> new DoorMatBlock(BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_YELLOW).strength(1.0F).sound(SoundType.MOSS).noOcclusion()));
    public static final RegistryEntry<SofaBlock> SOFA_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_sofa"), () -> new SofaBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_sofa"), () -> new SofaBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_sofa"), () -> new SofaBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_sofa"), () -> new SofaBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_sofa"), () -> new SofaBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_sofa"), () -> new SofaBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_sofa"), () -> new SofaBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_sofa"), () -> new SofaBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_sofa"), () -> new SofaBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_sofa"), () -> new SofaBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_sofa"), () -> new SofaBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_sofa"), () -> new SofaBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_sofa"), () -> new SofaBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_sofa"), () -> new SofaBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_RED = RegistryEntry.blockWithItem(Utils.resource("red_sofa"), () -> new SofaBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<SofaBlock> SOFA_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_sofa"), () -> new SofaBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(2.0F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_stool"), () -> new StoolBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_stool"), () -> new StoolBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_stool"), () -> new StoolBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_stool"), () -> new StoolBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_stool"), () -> new StoolBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_stool"), () -> new StoolBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_stool"), () -> new StoolBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_stool"), () -> new StoolBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_stool"), () -> new StoolBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_stool"), () -> new StoolBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_stool"), () -> new StoolBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_stool"), () -> new StoolBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_stool"), () -> new StoolBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_stool"), () -> new StoolBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_RED = RegistryEntry.blockWithItem(Utils.resource("red_stool"), () -> new StoolBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<StoolBlock> STOOL_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_stool"), () -> new StoolBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(1.5F).sound(SoundType.WOOD)));
    public static final RegistryEntry<LampBlock> LAMP_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_lamp"), () -> new LampBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_lamp"), () -> new LampBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_lamp"), () -> new LampBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_lamp"), () -> new LampBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_lamp"), () -> new LampBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_lamp"), () -> new LampBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_lamp"), () -> new LampBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_lamp"), () -> new LampBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_lamp"), () -> new LampBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_lamp"), () -> new LampBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_lamp"), () -> new LampBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_lamp"), () -> new LampBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_lamp"), () -> new LampBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_lamp"), () -> new LampBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_RED = RegistryEntry.blockWithItem(Utils.resource("red_lamp"), () -> new LampBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LampBlock> LAMP_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_lamp"), () -> new LampBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(1.5F).sound(SoundType.WOOD).lightLevel(LampBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_OAK_LIGHT = RegistryEntry.blockWithItem(Utils.resource("oak_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.OAK, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_SPRUCE_LIGHT = RegistryEntry.blockWithItem(Utils.resource("spruce_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.SPRUCE, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_BIRCH_LIGHT = RegistryEntry.blockWithItem(Utils.resource("birch_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.BIRCH, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_JUNGLE_LIGHT = RegistryEntry.blockWithItem(Utils.resource("jungle_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.JUNGLE, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_ACACIA_LIGHT = RegistryEntry.blockWithItem(Utils.resource("acacia_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.ACACIA, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_DARK_OAK_LIGHT = RegistryEntry.blockWithItem(Utils.resource("dark_oak_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.DARK_OAK, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_MANGROVE_LIGHT = RegistryEntry.blockWithItem(Utils.resource("mangrove_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.MANGROVE, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_CHERRY_LIGHT = RegistryEntry.blockWithItem(Utils.resource("cherry_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.CHERRY, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_CRIMSON_LIGHT = RegistryEntry.blockWithItem(Utils.resource("crimson_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.CRIMSON, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_WARPED_LIGHT = RegistryEntry.blockWithItem(Utils.resource("warped_light_ceiling_fan"), () -> new CeilingFanBlock(WoodType.WARPED, MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_OAK_DARK = RegistryEntry.blockWithItem(Utils.resource("oak_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.OAK, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_SPRUCE_DARK = RegistryEntry.blockWithItem(Utils.resource("spruce_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.SPRUCE, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_BIRCH_DARK = RegistryEntry.blockWithItem(Utils.resource("birch_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.BIRCH, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_JUNGLE_DARK = RegistryEntry.blockWithItem(Utils.resource("jungle_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.JUNGLE, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_ACACIA_DARK = RegistryEntry.blockWithItem(Utils.resource("acacia_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.ACACIA, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_DARK_OAK_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.DARK_OAK, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_MANGROVE_DARK = RegistryEntry.blockWithItem(Utils.resource("mangrove_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.MANGROVE, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_CHERRY_DARK = RegistryEntry.blockWithItem(Utils.resource("cherry_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.CHERRY, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_CRIMSON_DARK = RegistryEntry.blockWithItem(Utils.resource("crimson_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.CRIMSON, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingFanBlock> CEILING_FAN_WARPED_DARK = RegistryEntry.blockWithItem(Utils.resource("warped_dark_ceiling_fan"), () -> new CeilingFanBlock(WoodType.WARPED, MetalType.DARK, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).strength(0.8F).sound(SoundType.WOOD).lightLevel(CeilingFanBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<WoodenStorageCabinetBlock> STORAGE_CABINET_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_storage_cabinet"), () -> new WoodenStorageCabinetBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.BASS).strength(2.5F).sound(SoundType.WOOD).ignitedByLava().forceSolidOn()));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_storage_jar"), () -> new StorageJarBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_storage_jar"), () -> new StorageJarBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_storage_jar"), () -> new StorageJarBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_storage_jar"), () -> new StorageJarBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_storage_jar"), () -> new StorageJarBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_storage_jar"), () -> new StorageJarBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_storage_jar"), () -> new StorageJarBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_storage_jar"), () -> new StorageJarBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_storage_jar"), () -> new StorageJarBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<StorageJarBlock> STORAGE_JAR_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_storage_jar"), () -> new StorageJarBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).instrument(NoteBlockInstrument.HAT).strength(1.0F).sound(SoundType.GLASS)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_toilet"), () -> new WoodenToiletBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_toilet"), () -> new WoodenToiletBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_toilet"), () -> new WoodenToiletBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_toilet"), () -> new WoodenToiletBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_toilet"), () -> new WoodenToiletBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_toilet"), () -> new WoodenToiletBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_toilet"), () -> new WoodenToiletBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_toilet"), () -> new WoodenToiletBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_toilet"), () -> new WoodenToiletBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenToiletBlock> TOILET_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_toilet"), () -> new WoodenToiletBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_toilet"), () -> new ColouredToiletBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_toilet"), () -> new ColouredToiletBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_toilet"), () -> new ColouredToiletBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_toilet"), () -> new ColouredToiletBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_toilet"), () -> new ColouredToiletBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_toilet"), () -> new ColouredToiletBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_toilet"), () -> new ColouredToiletBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_toilet"), () -> new ColouredToiletBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_toilet"), () -> new ColouredToiletBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_toilet"), () -> new ColouredToiletBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_toilet"), () -> new ColouredToiletBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_toilet"), () -> new ColouredToiletBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_toilet"), () -> new ColouredToiletBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_toilet"), () -> new ColouredToiletBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_RED = RegistryEntry.blockWithItem(Utils.resource("red_toilet"), () -> new ColouredToiletBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredToiletBlock> TOILET_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_toilet"), () -> new ColouredToiletBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_basin"), () -> new WoodenBasinBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_basin"), () -> new WoodenBasinBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_basin"), () -> new WoodenBasinBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_basin"), () -> new WoodenBasinBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_basin"), () -> new WoodenBasinBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_basin"), () -> new WoodenBasinBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_basin"), () -> new WoodenBasinBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_basin"), () -> new WoodenBasinBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_basin"), () -> new WoodenBasinBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBasinBlock> BASIN_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_basin"), () -> new WoodenBasinBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_basin"), () -> new ColouredBasinBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_basin"), () -> new ColouredBasinBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_basin"), () -> new ColouredBasinBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_basin"), () -> new ColouredBasinBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_basin"), () -> new ColouredBasinBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_basin"), () -> new ColouredBasinBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_basin"), () -> new ColouredBasinBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_basin"), () -> new ColouredBasinBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_basin"), () -> new ColouredBasinBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_basin"), () -> new ColouredBasinBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_basin"), () -> new ColouredBasinBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_basin"), () -> new ColouredBasinBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_basin"), () -> new ColouredBasinBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_basin"), () -> new ColouredBasinBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_RED = RegistryEntry.blockWithItem(Utils.resource("red_basin"), () -> new ColouredBasinBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBasinBlock> BASIN_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_basin"), () -> new ColouredBasinBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_OAK = RegistryEntry.blockWithItem(Utils.resource("oak_bath"), () -> new WoodenBathBlock(WoodType.OAK, BlockBehaviour.Properties.of().mapColor(Blocks.OAK_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_SPRUCE = RegistryEntry.blockWithItem(Utils.resource("spruce_bath"), () -> new WoodenBathBlock(WoodType.SPRUCE, BlockBehaviour.Properties.of().mapColor(Blocks.SPRUCE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_BIRCH = RegistryEntry.blockWithItem(Utils.resource("birch_bath"), () -> new WoodenBathBlock(WoodType.BIRCH, BlockBehaviour.Properties.of().mapColor(Blocks.BIRCH_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_JUNGLE = RegistryEntry.blockWithItem(Utils.resource("jungle_bath"), () -> new WoodenBathBlock(WoodType.JUNGLE, BlockBehaviour.Properties.of().mapColor(Blocks.JUNGLE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_ACACIA = RegistryEntry.blockWithItem(Utils.resource("acacia_bath"), () -> new WoodenBathBlock(WoodType.ACACIA, BlockBehaviour.Properties.of().mapColor(Blocks.ACACIA_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_DARK_OAK = RegistryEntry.blockWithItem(Utils.resource("dark_oak_bath"), () -> new WoodenBathBlock(WoodType.DARK_OAK, BlockBehaviour.Properties.of().mapColor(Blocks.DARK_OAK_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_MANGROVE = RegistryEntry.blockWithItem(Utils.resource("mangrove_bath"), () -> new WoodenBathBlock(WoodType.MANGROVE, BlockBehaviour.Properties.of().mapColor(Blocks.MANGROVE_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_CHERRY = RegistryEntry.blockWithItem(Utils.resource("cherry_bath"), () -> new WoodenBathBlock(WoodType.CHERRY, BlockBehaviour.Properties.of().mapColor(Blocks.CHERRY_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_CRIMSON = RegistryEntry.blockWithItem(Utils.resource("crimson_bath"), () -> new WoodenBathBlock(WoodType.CRIMSON, BlockBehaviour.Properties.of().mapColor(Blocks.CRIMSON_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<WoodenBathBlock> BATH_WARPED = RegistryEntry.blockWithItem(Utils.resource("warped_bath"), () -> new WoodenBathBlock(WoodType.WARPED, BlockBehaviour.Properties.of().mapColor(Blocks.WARPED_PLANKS.defaultMapColor()).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_WHITE = RegistryEntry.blockWithItem(Utils.resource("white_bath"), () -> new ColouredBathBlock(DyeColor.WHITE, BlockBehaviour.Properties.of().mapColor(MapColor.SNOW).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_ORANGE = RegistryEntry.blockWithItem(Utils.resource("orange_bath"), () -> new ColouredBathBlock(DyeColor.ORANGE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_ORANGE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_MAGENTA = RegistryEntry.blockWithItem(Utils.resource("magenta_bath"), () -> new ColouredBathBlock(DyeColor.MAGENTA, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_MAGENTA).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_LIGHT_BLUE = RegistryEntry.blockWithItem(Utils.resource("light_blue_bath"), () -> new ColouredBathBlock(DyeColor.LIGHT_BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_BLUE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_YELLOW = RegistryEntry.blockWithItem(Utils.resource("yellow_bath"), () -> new ColouredBathBlock(DyeColor.YELLOW, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_YELLOW).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_LIME = RegistryEntry.blockWithItem(Utils.resource("lime_bath"), () -> new ColouredBathBlock(DyeColor.LIME, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GREEN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_PINK = RegistryEntry.blockWithItem(Utils.resource("pink_bath"), () -> new ColouredBathBlock(DyeColor.PINK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PINK).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_GRAY = RegistryEntry.blockWithItem(Utils.resource("gray_bath"), () -> new ColouredBathBlock(DyeColor.GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_LIGHT_GRAY = RegistryEntry.blockWithItem(Utils.resource("light_gray_bath"), () -> new ColouredBathBlock(DyeColor.LIGHT_GRAY, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_CYAN = RegistryEntry.blockWithItem(Utils.resource("cyan_bath"), () -> new ColouredBathBlock(DyeColor.CYAN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_PURPLE = RegistryEntry.blockWithItem(Utils.resource("purple_bath"), () -> new ColouredBathBlock(DyeColor.PURPLE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_PURPLE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_BLUE = RegistryEntry.blockWithItem(Utils.resource("blue_bath"), () -> new ColouredBathBlock(DyeColor.BLUE, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLUE).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_BROWN = RegistryEntry.blockWithItem(Utils.resource("brown_bath"), () -> new ColouredBathBlock(DyeColor.BROWN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BROWN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_GREEN = RegistryEntry.blockWithItem(Utils.resource("green_bath"), () -> new ColouredBathBlock(DyeColor.GREEN, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GREEN).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_RED = RegistryEntry.blockWithItem(Utils.resource("red_bath"), () -> new ColouredBathBlock(DyeColor.RED, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_RED).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ColouredBathBlock> BATH_BLACK = RegistryEntry.blockWithItem(Utils.resource("black_bath"), () -> new ColouredBathBlock(DyeColor.BLACK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(3.5F).sound(SoundType.STONE)));
    public static final RegistryEntry<ElectricityGeneratorBlock> ELECTRICITY_GENERATOR_LIGHT = RegistryEntry.blockWithItem(Utils.resource("light_electricity_generator"), () -> new ElectricityGeneratorBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(5.0F, 6.0F).lightLevel(state -> state.getValue(ElectricityGeneratorBlock.POWERED) ? 2 : 0).requiresCorrectToolForDrops().forceSolidOn()));
    public static final RegistryEntry<ElectricityGeneratorBlock> ELECTRICITY_GENERATOR_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_electricity_generator"), () -> new ElectricityGeneratorBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).instrument(NoteBlockInstrument.IRON_XYLOPHONE).strength(5.0F, 6.0F).lightLevel(state -> state.getValue(ElectricityGeneratorBlock.POWERED) ? 2 : 0).requiresCorrectToolForDrops().forceSolidOn()));
    public static final RegistryEntry<LightswitchBlock> LIGHTSWITCH_LIGHT = RegistryEntry.blockWithItem(Utils.resource("light_lightswitch"), () -> new LightswitchBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(2.0F).sound(SoundType.METAL)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<LightswitchBlock> LIGHTSWITCH_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_lightswitch"), () -> new LightswitchBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(2.0F).sound(SoundType.METAL)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingLightBlock> CEILING_LIGHT_LIGHT = RegistryEntry.blockWithItem(Utils.resource("light_ceiling_light"), () -> new CeilingLightBlock(MetalType.LIGHT, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).lightLevel(state -> state.getValue(CeilingLightBlock.POWERED) ? 15 : 0)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<CeilingLightBlock> CEILING_LIGHT_DARK = RegistryEntry.blockWithItem(Utils.resource("dark_ceiling_light"), () -> new CeilingLightBlock(MetalType.DARK, BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).lightLevel(state -> state.getValue(CeilingLightBlock.POWERED) ? 15 : 0)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<DoorbellBlock> DOORBELL = RegistryEntry.blockWithItem(Utils.resource("doorbell"), () -> new DoorbellBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_LIGHT_GRAY).strength(2.0F).sound(SoundType.METAL)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<TelevisionBlock> TELEVISION = RegistryEntry.blockWithItem(Utils.resource("television"), () -> new TelevisionBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(3.5F).sound(SoundType.LODESTONE).lightLevel(TelevisionBlock::light)), block -> new PoweredItem(block, new Item.Properties()));
    public static final RegistryEntry<ComputerBlock> COMPUTER = RegistryEntry.blockWithItem(Utils.resource("computer"), () -> new ComputerBlock(BlockBehaviour.Properties.of().mapColor(MapColor.COLOR_GRAY).strength(3.5F).sound(SoundType.LODESTONE)), block -> new PoweredItem(block, new Item.Properties()));
}
